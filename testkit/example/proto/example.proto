// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package com.example;

import "kalix/annotations.proto";

message ExampleState {
  string field1 = 1;
  string field2 = 2;
}

message ExampleEventOne {
  string field = 1;
}

message ExampleEventTwo {
  string field = 1;
}

message In {
  string field = 1 [(kalix.field).entity_key = true];
}

message Out {
  string field = 1;
}

service ExampleActionService {
  option (kalix.service) = {
    type : SERVICE_TYPE_ACTION
  };

  rpc DoSomething(In) returns (Out);
  rpc StreamSomething(In) returns (stream Out);
  rpc Fail(In) returns (Out);
}


service ExampleActionWithACLService {
  option (kalix.service) = {
    type : SERVICE_TYPE_ACTION
  };

  rpc Public(In) returns (Out) {
    option (kalix.method).acl.allow = { principal: ALL };
  };
  rpc OnlyFromOtherService(In) returns (Out) {
    option (kalix.method).acl.allow = { service: "other" };
  };
  rpc OnlyFromSelf(In) returns (Out) {
    option (kalix.method).acl.allow = { service: "self" };
  }
  rpc DelegateToSelf(In) returns (Out) {
    option (kalix.method).acl.allow = { principal: ALL };
  }
}

option (kalix.file).value_entity = {
  name: "ExampleValueEntity"
  entity_type: "example-value-entity"
  state: "ExampleState"
};

service ExampleValueEntityService {
  option (kalix.service) = {
    type : SERVICE_TYPE_ENTITY
    component : "ExampleValueEntity"
  };

  rpc DoSomethingOne(In) returns (Out);
  rpc DoSomethingTwo(In) returns (Out);
  rpc Fail(In) returns (Out);
}

option (kalix.file).event_sourced_entity = {
  name: "ExampleEventSourcedEntity"
  entity_type: "example-event-sourced-entity"
  state: "ExampleState"
  events: "ExampleEventOne"
  events: "ExampleEventTwo"
};

service ExampleEventSourcedEntityService {
  option (kalix.service) = {
    type : SERVICE_TYPE_ENTITY
    component : "ExampleEventSourcedEntity"
  };

  rpc DoSomethingOne(In) returns (Out);
  rpc DoSomethingTwo(In) returns (Out);
  rpc Fail(In) returns (Out);
}
