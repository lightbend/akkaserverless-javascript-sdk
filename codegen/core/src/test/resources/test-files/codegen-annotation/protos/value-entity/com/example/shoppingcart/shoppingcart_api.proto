// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This is the public API offered by the shopping cart Value Entity.

// tag::api[]
// tag::proto_syntax[]
syntax = "proto3";
// end::proto_syntax[]

// tag::proto_package[]
package com.example.shoppingcart;
// end::proto_package[]

option java_outer_classname = "ShoppingCartApi";

// tag::proto_imports[]
import "google/protobuf/empty.proto";
import "kalix/annotations.proto";
// end::proto_imports[]

// tag::proto_messages[]
message CreateCart {
  string cart_id = 1 [(kalix.field).entity_key = true];
}

message AddLineItem {
  string cart_id = 1 [(kalix.field).entity_key = true];
  string product_id = 2;
  string name = 3;
  int32 quantity = 4;
}

message RemoveLineItem {
  string cart_id = 1 [(kalix.field).entity_key = true];
  string product_id = 2;
}

message GetShoppingCart {
  string cart_id = 1 [(kalix.field).entity_key = true];
}

message RemoveShoppingCart {
  string cart_id = 1 [(kalix.field).entity_key = true];
}

message LineItem {
  string product_id = 1;
  string name = 2;
  int32 quantity = 3;
}

message Cart {
  repeated LineItem items = 1;
  int64 creation_timestamp = 2;
}
// end::proto_messages[]

// tag::proto_service[]
service ShoppingCartService {
  option (kalix.codegen) = {
    value_entity: {
      name: ".domain.ShoppingCart"
      entity_type: "shopping-cart"
      state: ".domain.Cart"
    }
  };

  rpc Create (CreateCart) returns (google.protobuf.Empty);
  rpc AddItem (AddLineItem) returns (google.protobuf.Empty);
  rpc RemoveItem (RemoveLineItem) returns (google.protobuf.Empty);
  rpc GetCart (GetShoppingCart) returns (Cart);
  rpc RemoveCart (RemoveShoppingCart) returns (google.protobuf.Empty);
}
// end::proto_service[]
// end::api[]
