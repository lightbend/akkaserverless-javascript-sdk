// Copyright 2021 Lightbend Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package com.example.replicatedentity;

import "akkaserverless/annotations.proto";
import "google/protobuf/empty.proto";

message UpdateCounter {
  string key = 1 [(akkaserverless.field).entity_key = true];
  int64 value = 2;
}

message CounterValue {
  int64 value = 1;
}

message Get {
  string key = 1 [(akkaserverless.field).entity_key = true];
}

message SomeValue {
  string key = 1;
  string description = 2;
}

message MutateSet {
  string key = 1 [(akkaserverless.field).entity_key = true];
  bool clear = 2;
  repeated SomeValue remove = 3;
  repeated SomeValue add = 4;
}

message SetSize {
  int32 size = 1;
}

message SetValue {
  repeated SomeValue items = 1;
}

message User {
  string name = 1 [(akkaserverless.field).entity_key = true];
}

message OnlineStatus {
  bool online = 1;
}

service ReplicatedEntityExample {
  rpc UpdateReplicatedCounter(UpdateCounter) returns (CounterValue);
  rpc GetReplicatedCounter(Get) returns (CounterValue);
  rpc MutateReplicatedSet(MutateSet) returns (SetSize);
  rpc GetReplicatedSet(Get) returns (SetValue);
}
