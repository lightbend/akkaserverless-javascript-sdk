/*
 * Copyright 2021 Lightbend Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// re-export types generated by proto-loader-gen-types to be namespaced together
// use `__Output` types for incoming messages, which will have defaults applied

export { ProtoGrpcType as Descriptor } from '../generated/proto/action';

export { ActionsDefinition as Definition } from '../generated/proto/kalix/component/action/Actions';

import { ActionsHandlers } from '../generated/proto/kalix/component/action/Actions';
export { ActionsHandlers as Handlers };

export type HandleUnary = ActionsHandlers['HandleUnary'];
export type UnaryCall = Parameters<HandleUnary>[0];
export type UnaryCallback = Parameters<HandleUnary>[1];

export type HandleStreamedIn = ActionsHandlers['HandleStreamedIn'];
export type StreamedInCall = Parameters<HandleStreamedIn>[0];

export type HandleStreamedOut = ActionsHandlers['HandleStreamedOut'];
export type StreamedOutCall = Parameters<HandleStreamedOut>[0];

export type HandleStreamed = ActionsHandlers['HandleStreamed'];
export type StreamedCall = Parameters<HandleStreamed>[0];

export type Call = UnaryCall | StreamedInCall | StreamedOutCall | StreamedCall;

export { ActionCommand__Output as Command } from '../generated/proto/kalix/component/action/ActionCommand';
export { Metadata__Output as Metadata } from '../generated/proto/kalix/component/Metadata';

export { ActionResponse as Response } from '../generated/proto/kalix/component/action/ActionResponse';
export { SideEffect } from '../generated/proto/kalix/component/SideEffect';
export { Forward } from '../generated/proto/kalix/component/Forward';
export { Failure } from '../generated/proto/kalix/component/Failure';
