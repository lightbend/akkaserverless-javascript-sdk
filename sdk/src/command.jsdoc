/*
 * Copyright 2021 Lightbend Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * Context for an entity.
 *
 * @interface module:kalix.EntityContext
 * @property {string} entityId The id of the entity that the command is for.
 * @property {Long} commandId The id of the command.
 * @property {module:kalix.Metadata} replyMetadata The metadata to send with a reply.
 */

/**
 * Effect context.
 *
 * @interface module:kalix.EffectContext
 * @property {module:kalix.Metadata} metadata The metadata associated with the command.
 */

/**
 * Context for a command.
 *
 * @interface module:kalix.CommandContext
 * @extends module:kalix.EffectContext
 */

/**
 * @name module:kalix.EntityContext#entityId
 * @type {string}
 */

/**
 * @name module:kalix.EntityContext#commandId
 * @type {Long}
 */

/**
 * @name module:kalix.EffectContext#metadata
 * @type {module:kalix.Metadata}
 */

/**
 * @name module:kalix.EntityContext#replyMetadata
 * @type {module:kalix.Metadata}
 */

/**
 * DEPRECATED. Emit an effect after processing this command.
 *
 * @function module:kalix.EffectContext#effect
 * @param {any} method The entity service method to invoke.
 * @param {object} message The message to send to that service.
 * @param {boolean} [synchronous] Whether the effect should be execute synchronously or not.
 * @param {module:kalix.Metadata} [metadata] Metadata to send with the effect.
 * @param {boolean} [internalCall] For internal calls to this deprecated function.
 */

// FIXME: remove for version 0.8 (https://github.com/lightbend/kalix-proxy/issues/410)
/**
 * DEPRECATED. Forward this command to another service component call.
 *
 * @deprecated Since version 0.7. Will be deleted in version 0.8. Use 'forward' instead.
 *
 * @function module:kalix.CommandContext#thenForward
 * @param {any} method The service component method to invoke.
 * @param {object} message The message to send to that service component.
 * @param {module:kalix.Metadata} metadata Metadata to send with the forward.
 */

/**
 * DEPRECATED. Forward this command to another service component call, use 'ReplyFactory.forward' instead.
 *
 * @function module:kalix.CommandContext#forward
 * @param {any} method The service component method to invoke.
 * @param {object} message The message to send to that service component.
 * @param {module:kalix.Metadata} [metadata] Metadata to send with the forward.
 * @param {boolean} [internalCall] For internal calls to this deprecated function.
 */

/**
 * Fail handling this command.
 *
 * An alternative to using this is to return a failed Reply created with 'ReplyFactory.failed'.
 *
 * @function module:kalix.EffectContext#fail
 * @param {string} msg The failure message.
 * @param {number} [grpcStatus] The grpcStatus.
 * @throws An error that captures the failure message. Note that even if you catch the error thrown by this
 * method, the command will still be failed with the given message.
 */
