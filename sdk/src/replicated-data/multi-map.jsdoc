/*
 * Copyright 2021 Lightbend Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @classdesc A replicated multimap (map of sets).
 *
 * A replicated map that maps keys to values, where each key may be associated with multiple values.
 *
 * @constructor module:kalix.replicatedentity.ReplicatedMultiMap
 * @implements module:kalix.replicatedentity.ReplicatedData
 */

/**
 * Get the values for the given key.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#get
 * @param {module:kalix.Serializable} key The key of the entry.
 * @returns {Set<module:kalix.Serializable>} The current values at the given key, or an empty Set.
 */

/**
 * Store a key-value pair.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#put
 * @param {module:kalix.Serializable} key The key of the entry.
 * @param {module:kalix.Serializable} value The value to add to the entry.
 * @returns {module:kalix.replicatedentity.ReplicatedMultiMap} This multimap.
 */

/**
 * Store multiple values for a key.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#putAll
 * @param {module:kalix.Serializable} key The key of the entry.
 * @param {Iterator<module:kalix.Serializable>} values The values to add to the entry.
 * @returns {module:kalix.replicatedentity.ReplicatedMultiMap} This multimap.
 */

/**
 * Delete a single key-value pair for the given key and value.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#delete
 * @param {module:kalix.Serializable} key The key of the entry.
 * @param {module:kalix.Serializable} value The value to remove from the entry.
 * @return {module:kalix.replicatedentity.ReplicatedMultiMap} This multimap.
 */

/**
 * Delete all values associated with the given key.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#deleteAll
 * @param {module:kalix.Serializable} key The key of the entry.
 * @return {module:kalix.replicatedentity.ReplicatedMultiMap} This multimap.
 */

/**
 * Check whether this multimap contains at least one value for the given key.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#has
 * @param {module:kalix.Serializable} key The key to check.
 * @returns {boolean} True if this multimap contains any values for the given key.
 */

/**
 * Check whether this multimap contains the given value associated with the given key.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#hasValue
 * @param {module:kalix.Serializable} key The key to check.
 * @param {module:kalix.Serializable} value The value to check.
 * @returns {boolean} True if the key-value pair is in this multimap.
 */

/**
 * The total number of values stored in the multimap.
 *
 * @name module:kalix.replicatedentity.ReplicatedMultiMap#size
 * @type {number}
 * @readonly
 */

/**
 * The number of keys with values stored in the multimap.
 *
 * @name module:kalix.replicatedentity.ReplicatedMultiMap#keysSize
 * @type {number}
 * @readonly
 */

/**
 * Return an iterator of the keys of this multimap.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#keys
 * @returns {IterableIterator<module:kalix.Serializable>}
 */

/**
 * Clear all entries from this multimap.
 *
 * @function module:kalix.replicatedentity.ReplicatedMultiMap#clear
 * @return {module:kalix.replicatedentity.ReplicatedMultiMap} This multimap.
 */
