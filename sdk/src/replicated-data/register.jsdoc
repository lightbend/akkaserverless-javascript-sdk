/*
 * Copyright 2021 Lightbend Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

/**
 * @classdesc A Replicated Register data type.
 *
 * A ReplicatedRegister uses a clock to determine which of two concurrent updates should win. The
 * last write wins. The clock is represented as a number. The default clock uses the proxies system
 * time, custom clocks can supply a custom number to be used. If two clock values are equal, the
 * write from the node with the lowest address wins.
 *
 * @constructor module:kalix.replicatedentity.ReplicatedRegister
 * @implements module:kalix.replicatedentity.ReplicatedData
 * @param {module:kalix.Serializable} value A value to hold in the register.
 * @param {module:kalix.replicatedentity.Clock} [clock=Clocks.DEFAULT] The clock to use.
 * @param {number} [customClockValue=0] The custom clock value, if using a custom clock.
 */

/**
 * The value of this register.
 *
 * Setting it will cause it to be set with the default clock.
 *
 * @name module:kalix.replicatedentity.ReplicatedRegister#value
 * @type {module:kalix.Serializable}
 */

/**
 * Set the value using a custom clock.
 *
 * @function module:kalix.replicatedentity.ReplicatedRegister#setWithClock
 * @param {module:kalix.Serializable} value The value to set.
 * @param {module:kalix.replicatedentity.Clock} [clock=Clocks.DEFAULT] The clock.
 * @param {number} [customClockValue=0] Ignored if a custom clock isn't specified.
 */
