name: Publish

on:
  push:
    tags:
      - "v*"

jobs:
  verify:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
      - run: npm install
        working-directory: create-akkasls-entity
      - name: Generate sample project
        run: node "${{ github.workspace }}/create-akkasls-entity/create-akkasls-entity.js" generated-project --template event-sourced-entity
        working-directory: ${{ runner.temp }}
      - name: Upload generated project as artifact
        uses: actions/upload-artifact@v1
        with:
          name: generated-project
          path: ${{ runner.temp }}/generated-project
      - name: Link akkasls-scripts from source
        run: |
          npm install
          npm link
        working-directory: akkasls-scripts
      - name: Link akkasls-scripts to generated project
        run: npm link @lightbend/akkasls-scripts
        working-directory: ${{ runner.temp }}/generated-project
      - name: Build generated project
        run: |
          npm install
          npm run build
        working-directory: ${{ runner.temp }}/generated-project
      - name: Spin up proxy in background
        run: docker-compose -f docker-compose.yml -f docker-compose.linux.yml up -d
        working-directory: ${{ runner.temp }}/generated-project
      - name: Run service in background
        run: npm run start&
        env:
          HOST: "0.0.0.0"
        working-directory: ${{ runner.temp }}/generated-project
      - name: Verify expected error is returned from request once services are running
        timeout-minutes: 2
        run: |
          echo "Waiting for proxy to respond"
          until curl -XPOST localhost:9000/com.example.MyServiceEntity/GetValue -H "Content-Type:application/json" -d '{"entityId":"test"}' -o response.txt; do sleep 5; done
          echo "Validating expected error message"
          test "$(cat response.txt)" = 'The command handler for `GetValue` is not implemented, yet'
        working-directory: ${{ runner.temp }}/generated-project

  deploy-create-akkasls-entity:
    runs-on: ubuntu-latest
    needs: verify
    defaults:
      run:
        working-directory: create-akkasls-entity

    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"
      - name: Set version
        run: 'sed -i "s/  \"version\":.*/  \"version\": \"$(git tag|cut -c2-)\",/" package.json'
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}

  deploy-akkasls-scripts:
    runs-on: ubuntu-latest
    needs: verify
    defaults:
      run:
        working-directory: akkasls-scripts

    steps:
      - uses: actions/checkout@v2
      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v2
        with:
          node-version: "14.x"
          registry-url: "https://registry.npmjs.org"
      - name: Set version
        run: 'sed -i "s/  \"version\":.*/  \"version\": \"$(git tag|cut -c2-)\",/" package.json'
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
